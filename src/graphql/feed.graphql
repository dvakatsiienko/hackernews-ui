# Query
query feed(
    $filter: String
    $skip: Int
    $take: Int
    $orderBy: LinkOrderByInput
) {
    feed(filter: $filter, skip: $skip, take: $take, orderBy: $orderBy) {
        links {
            ...LinkFragment
        }
        count
    }
}

# query feedSearch($filter: String!) {
#     feed(filter: $filter) {
#         links {
#             id
#             url
#             description
#             # createdAt
#             postedBy {
#                 id
#                 name
#             }
#             votes {
#                 id
#                 user {
#                     id
#                 }
#             }
#         }
#     }
# }

# # Mutation
mutation createLink($description: String!, $url: String!) {
    createLink(description: $description, url: $url) {
        id
        url
        description
        createdAt
    }
}

mutation vote($linkId: ID!) {
    vote(linkId: $linkId) {
        id
        link {
            ...LinkFragment
        }
        user {
            id
        }
    }
}

# # Subscription
# subscription newLinksSubscription {
#     newLink {
#         id
#         url
#         description
#         # createdAt
#         postedBy {
#             id
#             name
#         }
#         votes {
#             id
#             user {
#                 id
#             }
#         }
#     }
# }

# subscription newVotesSubscription {
#     newVote {
#         id
#         link {
#             id
#             url
#             description
#             # createdAt
#             postedBy {
#                 id
#                 name
#             }
#             votes {
#                 id
#                 user {
#                     id
#                 }
#             }
#         }
#         user {
#             id
#         }
#     }
# }

# Fragment
fragment LinkFragment on Link {
    id
    url
    description
    createdAt
    postedBy {
        id
        name
    }
    votes {
        id
        user {
            id
        }
    }
}
